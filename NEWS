=============================
Version 0.16.4 - April 2016

This release requires oce-0.16.0 or oce-0.16.1

* New memeory management system : previous pythonocc released
suffered from memory issues (leaks). The release introduces a
much better way to deal with the OCE handles

* wx and pyqt5 fixes

* minor fixes to the webgl renderers

=============================
Version 0.16.3 - January 2016

This release requires oce-0.16.0 or oce-0.16.1

* New examples: visualization_overpaint_viewerer,
visualization_graphic3d_custom_opengl.py, matplotlib_box,
parallel_slicer, topology_glue

* PyQt5 support

* Improvements and fixes to the Tesselator class:
Computation of edges, Interface to Vertices, Normals, and Triangles

* minor portability fixes/improvements.

==========================
Version 0.16.2 - July 2015

This release requires oce-0.16.0 or oce-0.16.1

* New examples : display_quality, surface_from_curve, export_to_image,
shape_pickling, display_linewidth, prs3d_customization, textured_shape,
faircurve, topology_prism, topology_pipe, evolved_shape, draft_angle,
through_section, topology_face, topology_edge, vertex_filleting,
export_to_EF(PDF, PS, tex, SVG)

* Mingw64 compilation fix

* Fixed wrapper for Standard_Boolean returned by reference as parameters

==========================
Version 0.16.1 - June 2015

This release requires oce-0.16.0 or oce-0.16.1

* WebGL upgrades and improvements, for both Three.js and x3dom, new webgl examples

* used deque in garbage collector rather than python lists

* pyside fix on Windows

* qt viewer improvements

* added classic bottle example

* wrapper fix for C++ const Standard_Integer & parameters

* wrapper fix for default values ;

* minor cmake fixes/improvements

* new wrapper for : MeshVS, OCAF STEP and IGES 

==============================
Version 0.16.0 - November 2014

This release requires oce-0.16.0

* Support for latest oce release (0.16.0)

* major code refactoring, including examples

* completed WebGl three.js work

* added x3dom renderer and x3d export feature

* improved project quality (travis-ci, pylint check, pep8 compliancy,
  removed old and/or untested code)

* sphinx based documentation, both for api documentation and getting started

* python3 support
