os: linux
dist: bionic

language: cpp

git:
  depth: false

# the secure below is the binstar token
# - Prerequisites :
# On Linux, install travis tools using:
# $ sudo gem install travis
# this is ruby code, check your ruby environment is up to date.
#
# - Generate the secure
# 1. create an anconda cloud token
# $ anaconda auth -n the_token_name --max-age 22896000 -c --scopes api
# token_name can be anything. Be sure you use a token_name you can easily identify
# on the anaconda cloud configuration page.
# the token is returned as something like "yh-6654-12334_111225"
# 2. encrypt the token
# You have to be in the directory where you installed the local copy of the repository
# $ cd [your_dev_dir]/pythonocc-core
# $ sudo travis encrypt BINSTAR_TOKEN="yh-6654-12334_111225"
# !!be careful about the typo BINSTAR_TOKEN with the proper case. Otherwise
# !!the $BINSTAR_TOKEN env var value will be null and the line
# !!anaconda -t $BINSTAR_TOKEN upload *.bz2 will not be run properly
# 3. after that, copy/paste the secure content just below, between double quotes.
env:
  global:
    - secure: "Bqor4TrYqeJUkjiIHjCq/e3xt/jAoU3Q5kwG/ej+QxaiT6hmkirX3Io3rHxNTbS+mYMAMTbtkkpGqYIYIYtNVx8jGYLdwOzNcuW/wzZf9VuAW/rnjx2lzuYRhHk3GOylSPUU06JHvXDmZvdMxetNBeWaE5hGuJsC9liA+stDepA="

jobs:
  include:
# Linux
    - env: PYTHON="3.5" CONDA_PY=35 ARCH="x86_64"
    - env: PYTHON="3.6" CONDA_PY=36 ARCH="x86_64"
    - env: PYTHON="3.7" CONDA_PY=37 ARCH="x86_64"
# OSX
    - env: PYTHON="3.5" CONDA_PY=35 ARCH="x86_64"
      os: osx
      osx_image: xcode9.4
    - env: PYTHON="3.6" CONDA_PY=36 ARCH="x86_64"
      os: osx
      osx_image: xcode9.4
    - env: PYTHON="3.7" CONDA_PY=37 ARCH="x86_64"
      os: osx
      osx_image: xcode9.4
# Windows
    - env: PYTHON="3.5" CONDA_PY=35 ARCH="x86_64"
      os: windows
    - env: PYTHON="3.6" CONDA_PY=36 ARCH="x86_64"
      os: windows
    - env: PYTHON="3.7" CONDA_PY=37 ARCH="x86_64"
      os: windows

before_install:
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    elif [ "$TRAVIS_OS_NAME" == "osx" ]; then
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh;
      wget https://github.com/phracker/MacOSX-SDKs/releases/download/10.13/MacOSX10.9.sdk.tar.xz -O MacOSX10.9.sdk.tar.xz;
      tar xf MacOSX10.9.sdk.tar.xz;
      sudo mv MacOSX10.9.sdk /opt/;
      ls /opt;
    fi;
  - if [ "$TRAVIS_OS_NAME" != "windows" ]; then
      export MINICONDA_PATH=$HOME/miniconda;
      export MINICONDA_SUB_PATH=$MINICONDA_PATH/bin;
    elif [ "$TRAVIS_OS_NAME" == "windows" ]; then
      export MINICONDA_PATH=$HOME/miniconda;
      export MINICONDA_PATH_WIN=`cygpath --windows $MINICONDA_PATH`;
      export MINICONDA_SUB_PATH=$MINICONDA_PATH/Scripts;
    fi;
  - export MINICONDA_LIB_BIN_PATH=$MINICONDA_PATH/Library/bin;
  - if [ "$TRAVIS_OS_NAME" != "windows" ]; then
      bash miniconda.sh -b -u -p $MINICONDA_PATH;
    fi;
  - if [ "$TRAVIS_OS_NAME" == "windows" ]; then
      choco install openssl.light;
      choco install miniconda3 --params="'/JustMe /AddToPath:1 /D:$MINICONDA_PATH_WIN'";
    fi;
  - export PATH="$MINICONDA_PATH:$MINICONDA_SUB_PATH:$MINICONDA_LIB_BIN_PATH:$PATH"
  - export PYTHONUNBUFFERED=1
  - hash -r
  - conda config --set always_yes yes --set changeps1 no --set ssl_verify false
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a
  - conda install conda-build anaconda-client
  # download/install OCE from DLR-SC channel
  - conda config --add channels https://conda.anaconda.org/dlr-sc
  - conda config --add channels https://conda.anaconda.org/conda-forge
  - conda config --add channels https://conda.anaconda.org/tpaviot
  - conda config --add channels https://conda.anaconda.org/oce
  - conda config --add channels https://conda.anaconda.org/pythonocc


script:
  - conda build ci/conda --dirty --no-remove-work-dir

# automative upload to anaconda cloud only
# if the build was triggered by a cron
# labelled as "nightly"
# else labelled as "continuous-delivery"
after_success:
  - python ci/move-conda-package.py
  - if [ "$TRAVIS_BRANCH" == "master" ]; then
      anaconda -t $BINSTAR_TOKEN upload *.bz2 -l main --force;
    else
      anaconda -t $BINSTAR_TOKEN upload *.bz2 -l cd-$TRAVIS_BRANCH --force;
    fi


branches:
  only:
    - master
    - /^review/
